version: '3.8' # Version of the Docker Compose file format

services:
  prometheus:
    image: prom/prometheus # Docker image for Prometheus
    container_name: prometheus # Name of the Prometheus container
    volumes:
      - prometheus_data:/prometheus # Mounts volume for storing Prometheus data
      - ./prometheus.yml:/etc/prometheus/prometheus.yml # Mounts Prometheus configuration file
      - ./web.yml:/etc/prometheus/web.yml # Mounts additional web configuration file
      # - ./prometheus_rules.yml:/etc/prometheus/prometheus_rules.yml # Optional: For defining alerting rules
    command:
      - '--config.file=/etc/prometheus/prometheus.yml' # Specifies the Prometheus configuration file
      - '--web.config.file=/etc/prometheus/web.yml' # Specifies the web configuration file
      - '--storage.tsdb.path=/prometheus' # Sets the storage path for time-series data
      - '--web.enable-lifecycle' # Enables certain management features via HTTP
    ports:
      - '9090:9090' # Exposes Prometheus on port 9090
    restart: unless-stopped # Restart policy

  # Configuration for Grafana service
  # (Similar structure as Prometheus, with specific settings for Grafana)
  grafana:
    image: grafana/grafana
    container_name: grafana
    depends_on:
      - prometheus
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GF_SECURITY_ADMIN_PASSWORD} 
      GF_USERS_ALLOW_SIGN_UP: 'false'
    ports:
      - '5000:3000'
    restart: unless-stopped

  # Configuration for Node Exporter service
  # Mounts host directories to gather system metrics
  node_exporter:
    image: prom/node-exporter
    container_name: node_exporter
    volumes:
      - '/proc:/host/proc:ro'
      - '/sys:/host/sys:ro'
      - '/:/rootfs:ro'
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points'
      - '^/(sys|proc|dev|host|etc)($|/)'
    ports:
      - '9100:9100'
    restart: unless-stopped

  # Configuration for cAdvisor service
  # Mounts host directories to gather container metrics
  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    container_name: cadvisor
    volumes:
      - '/:/rootfs:ro'
      - '/var/run:/var/run:rw'
      - '/sys:/sys:ro'
      - '/var/lib/docker/:/var/lib/docker:ro'
    ports:
      - '8080:8080'
    restart: unless-stopped

  # Configuration for Blackbox Exporter service
  # Includes command and ports for Blackbox Exporter
  blackbox_exporter:
    image: prom/blackbox-exporter
    container_name: blackbox_exporter
    volumes:
      - ./blackbox.yml:/config/blackbox.yml
    command:
      - '--config.file=/config/blackbox.yml'
    ports:
      - '9115:9115'
    restart: unless-stopped
volumes:
  prometheus_data: # Defines a named volume for Prometheus data
  grafana_data: # Defines a named volume for Grafana data
